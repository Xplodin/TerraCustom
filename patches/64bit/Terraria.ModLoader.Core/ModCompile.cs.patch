--- src/tModLoader/Terraria.ModLoader.Core/ModCompile.cs
+++ src/64bit/Terraria.ModLoader.Core/ModCompile.cs
@@ -55,6 +_,7 @@
 
 		public static readonly string ModSourcePath = Path.Combine(Program.SavePath, "Mod Sources");
 
+		// Use ModCompile64 instead of ModCompile
 		internal static readonly string modCompileDir = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "ModCompile");
 		internal static readonly string modCompileVersionPath = Path.Combine(modCompileDir, "version");
 
@@ -216,6 +_,7 @@
 			if (!Directory.Exists(modReferencesPath))
 				Directory.CreateDirectory(modReferencesPath);
 
+			// tModLoader64bit.exe
 			var tMLPath = Assembly.GetExecutingAssembly().Location;
 			var touchStamp = $"{tMLPath} @ {File.GetLastWriteTime(tMLPath)}";
 			var touchFile = Path.Combine(modReferencesPath, "touch");
@@ -238,16 +_,16 @@
 
 			var tMLDir = Path.GetDirectoryName(tMLPath);
 #if CLIENT
-			var tMLServerName = Path.GetFileName(tMLPath).Replace("tModLoader", "tModLoaderServer");
+			var tMLServerName = Path.GetFileName(tMLPath).Replace("tModLoader64bit", "tModLoader64bitServer");
 			if (tMLServerName == "Terraria.exe")
-				tMLServerName = "tModLoaderServer.exe";
+				tMLServerName = "tModLoader64bitServer.exe";
 			var tMLServerPath = Path.Combine(tMLDir, tMLServerName);
 #else
 			var tMLServerPath = tMLPath;
-			var tMLClientName = Path.GetFileName(tMLPath).Replace("tModLoaderServer", "tModLoader");
+			var tMLClientName = Path.GetFileName(tMLPath).Replace("tModLoader64bit", "tModLoader64bitServer");
 			tMLPath = Path.Combine(tMLDir, tMLClientName);
 			if (!File.Exists(tMLPath))
-				tMLPath = Path.Combine(tMLDir, "Terraria.exe");
+				tMLPath = Path.Combine(tMLDir, "tModLoader64bit.exe");
 #endif
 			var tMLBuildServerPath = tMLServerPath;
 			if (FrameworkVersion.Framework == Framework.Mono)
